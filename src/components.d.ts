/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface ButtonComponent {
        /**
          * The active status
         */
        "active": boolean;
        /**
          * The button types
         */
        "bstyle": 'primary' | 'secondary' | 'ghost';
        /**
          * The disabled status
         */
        "disabled": boolean;
        /**
          * The text label of the button
         */
        "label": string;
    }
    interface HeadingComponent {
    }
    interface LinkComponent {
        /**
          * The active status
         */
        "active": boolean;
        /**
          * The disabled status
         */
        "disabled": boolean;
        /**
          * The icon of the link
         */
        "icon": string;
        /**
          * The text label of the button
         */
        "label": string;
    }
    interface SubheadingComponent {
    }
    interface TipsComponent {
        "acceptLabel": string;
        "actions": any;
        "backLabel": string;
        "heading": string;
        "position": string;
        "subHeading": string;
    }
}
declare global {
    interface HTMLButtonComponentElement extends Components.ButtonComponent, HTMLStencilElement {
    }
    var HTMLButtonComponentElement: {
        prototype: HTMLButtonComponentElement;
        new (): HTMLButtonComponentElement;
    };
    interface HTMLHeadingComponentElement extends Components.HeadingComponent, HTMLStencilElement {
    }
    var HTMLHeadingComponentElement: {
        prototype: HTMLHeadingComponentElement;
        new (): HTMLHeadingComponentElement;
    };
    interface HTMLLinkComponentElement extends Components.LinkComponent, HTMLStencilElement {
    }
    var HTMLLinkComponentElement: {
        prototype: HTMLLinkComponentElement;
        new (): HTMLLinkComponentElement;
    };
    interface HTMLSubheadingComponentElement extends Components.SubheadingComponent, HTMLStencilElement {
    }
    var HTMLSubheadingComponentElement: {
        prototype: HTMLSubheadingComponentElement;
        new (): HTMLSubheadingComponentElement;
    };
    interface HTMLTipsComponentElement extends Components.TipsComponent, HTMLStencilElement {
    }
    var HTMLTipsComponentElement: {
        prototype: HTMLTipsComponentElement;
        new (): HTMLTipsComponentElement;
    };
    interface HTMLElementTagNameMap {
        "button-component": HTMLButtonComponentElement;
        "heading-component": HTMLHeadingComponentElement;
        "link-component": HTMLLinkComponentElement;
        "subheading-component": HTMLSubheadingComponentElement;
        "tips-component": HTMLTipsComponentElement;
    }
}
declare namespace LocalJSX {
    interface ButtonComponent {
        /**
          * The active status
         */
        "active"?: boolean;
        /**
          * The button types
         */
        "bstyle"?: 'primary' | 'secondary' | 'ghost';
        /**
          * The disabled status
         */
        "disabled"?: boolean;
        /**
          * The text label of the button
         */
        "label"?: string;
    }
    interface HeadingComponent {
    }
    interface LinkComponent {
        /**
          * The active status
         */
        "active"?: boolean;
        /**
          * The disabled status
         */
        "disabled"?: boolean;
        /**
          * The icon of the link
         */
        "icon"?: string;
        /**
          * The text label of the button
         */
        "label"?: string;
    }
    interface SubheadingComponent {
    }
    interface TipsComponent {
        "acceptLabel"?: string;
        "actions"?: any;
        "backLabel"?: string;
        "heading"?: string;
        "onAccept"?: (event: CustomEvent<any>) => void;
        /**
          * The back action to redirect
         */
        "onBack"?: (event: CustomEvent<any>) => void;
        "position"?: string;
        "subHeading"?: string;
    }
    interface IntrinsicElements {
        "button-component": ButtonComponent;
        "heading-component": HeadingComponent;
        "link-component": LinkComponent;
        "subheading-component": SubheadingComponent;
        "tips-component": TipsComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "button-component": LocalJSX.ButtonComponent & JSXBase.HTMLAttributes<HTMLButtonComponentElement>;
            "heading-component": LocalJSX.HeadingComponent & JSXBase.HTMLAttributes<HTMLHeadingComponentElement>;
            "link-component": LocalJSX.LinkComponent & JSXBase.HTMLAttributes<HTMLLinkComponentElement>;
            "subheading-component": LocalJSX.SubheadingComponent & JSXBase.HTMLAttributes<HTMLSubheadingComponentElement>;
            "tips-component": LocalJSX.TipsComponent & JSXBase.HTMLAttributes<HTMLTipsComponentElement>;
        }
    }
}
